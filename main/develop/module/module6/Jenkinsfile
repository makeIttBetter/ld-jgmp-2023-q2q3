pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = 'jenkins-docker-jgmp'
        DOCKER_IMAGE_NAME = "dockeruser111111111/jgmp-test:${env.BUILD_ID}"
        NAMESPACE = 'module6'
        DEPLOYMENT_NAME = 'my-web-app'
    }

    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    checkout scm
                    def dockerfilePath = 'main/develop/module/module6/Dockerfile'
                    def appImage = docker.build("${DOCKER_IMAGE_NAME}", "-f ${dockerfilePath} .")
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    def appImage = docker.image("${DOCKER_IMAGE_NAME}")
                    docker.withRegistry('https://registry.hub.docker.com', "${DOCKERHUB_CREDENTIALS}") {
                        appImage.push("${env.BUILD_ID}")
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                   bat '''
                       set KUBECONFIG=main/develop/module/module6/kube-config
                       kubectl create namespace %NAMESPACE% --dry-run=client -o yaml | kubectl apply -f -
                       kubectl create deployment %DEPLOYMENT_NAME% --image=nginx --namespace=%NAMESPACE% --dry-run=client -o yaml | powershell -Command "Get-Content -Raw | ForEach-Object { $_ -replace 'nginx', 'dockeruser111111111/jgmp-test:%BUILD_ID%' }" | kubectl apply -f -
                       for /F "delims=" %%a in ('kubectl get deployment %DEPLOYMENT_NAME% -n %NAMESPACE% -o jsonpath="{.spec.template.spec.containers[0].name}"') do set CONTAINER_NAME=%%a
                       kubectl set image deployment/%DEPLOYMENT_NAME% %CONTAINER_NAME%=%DOCKER_IMAGE_NAME% --namespace=%NAMESPACE%
                   '''
                }
            }
        }
    }
}
