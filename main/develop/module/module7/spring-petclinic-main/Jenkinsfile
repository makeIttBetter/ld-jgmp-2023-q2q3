pipeline {
    agent any

     environment {
            DEPLOYMENT_NAME = 'spring-petclinic'
            NAMESPACE = 'module7'
            DOCKERHUB_CREDENTIALS = 'jenkins-docker-jgmp'
            DOCKER_IMAGE_NAME = "dockeruser111111111/jgmp-test:${DEPLOYMENT_NAME}-${env.BUILD_ID}"
            CHART_PATH = 'main/develop/module/module7/spring-petclinic-main/helm/spring-petclinic'
            RELEASE_NAME = 'spring-petclinic-release'
        }

    stages {
         stage('Prepare and Copy Artifacts') {
             steps {
                 script {
                     // Copy artifacts from 'continuous_m7' job
                     copyArtifacts projectName: 'continuous_m7', filter: 'main/develop/module/module7/spring-petclinic-main/*.jar'
                 }
             }
         }

        stage('Build Docker Image') {
            steps {
                script {
                    checkout scm
                    def dockerfilePath = 'main/develop/module/module7/spring-petclinic-main/Dockerfile'
                    def appImage = docker.build("${DOCKER_IMAGE_NAME}", "-f ${dockerfilePath} .")
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    def appImage = docker.image("${DOCKER_IMAGE_NAME}")
                    docker.withRegistry('https://registry.hub.docker.com', "${DOCKERHUB_CREDENTIALS}") {
                        appImage.push("${DEPLOYMENT_NAME}-${env.BUILD_ID}")
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                   bat """
                       set KUBECONFIG=main/develop/module/module7/spring-petclinic-main/kube-config
                       kubectl create namespace %NAMESPACE% --dry-run=client -o yaml | kubectl apply -f -
                       kubectl create deployment %DEPLOYMENT_NAME% --image=nginx --namespace=%NAMESPACE% --dry-run=client -o yaml | kubectl apply -f -
                       kubectl set image deployment/%DEPLOYMENT_NAME% nginx=%DOCKER_IMAGE_NAME% --namespace=%NAMESPACE%
                   """
                }
            }
        }
        stage('Deploy to Kubernetes with Helm') {
            steps {
                script {
                    // Ensure the namespace exists
                    bat """
                        set KUBECONFIG=main/develop/module/module7/spring-petclinic-main/kube-config
                        kubectl create namespace %NAMESPACE% --dry-run=client -o yaml | kubectl apply -f -
                    """

                    // Update the chart dependencies
                    bat "helm dependency update %CHART_PATH%"

                    // Install/Upgrade the release with Helm
                    bat """
                        helm upgrade --install %RELEASE_NAME% %CHART_PATH% ^
                        --namespace %NAMESPACE% ^
                        --set image.repository=%DOCKER_IMAGE_NAME% ^
                        --set image.tag=%DEPLOYMENT_NAME%-%BUILD_ID%
                    """
                }
            }
        }

    }
}
